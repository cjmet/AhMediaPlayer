
This approach involves wrapping your web content in a custom HTML string with JavaScript code to measure the content height and send it back to your app.


<!DOCTYPE html>
<html>
<head>
<script>
function getContentHeight() {
  return document.body.scrollHeight;
}
</script>
</head>
<body>
<script>
window.parent.postMessage(getContentHeight(), '*');
</script>
</body>
</html>



// In your C# code, handle the WebView's MessageReceived event and update its height based on the received message:



private void OnWebViewMessageReceived(object sender, WebViewMessageReceivedEventArgs e)
{
    if (e.Data is double height)
    {
        Element.HeightRequest = height;
    }
}





// a) Using EvaluateJavaScriptAsync:

await webView.EvaluateJavaScriptAsync("window.scrollTo(0, document.body.scrollHeight)");


// Using WebViewSource with custom HTML:

<!DOCTYPE html>
<html>
<head>
<script>
window.onload = function() {
  window.scrollTo(0, document.body.scrollHeight);
};
</script>
</head>
<body>
</body>
</html>


// Set this HTML string as the source of your WebView:

webView.Source = new HtmlWebViewSource
{
    Html = htmlString
};
